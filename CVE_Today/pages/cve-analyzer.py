import streamlit as st
import requests
import re

# URL do webhook n8n
N8N_WEBHOOK = "http://62.171.180.64:5678/webhook/2547be73-bbe9-46bd-95bf-4b7a9afb67b6/analisar-cve"

st.set_page_config(page_title="CVE Analyzer", page_icon="üîé", layout="centered")

st.title("üîé CVE Analyzer")

# Input do usu√°rio
cve_id = st.text_input("Informe a CVE ID (ex: CVE-2024-12345):")

if st.button("Analisar"):
    if cve_id.strip():
        try:
            # Faz request ao webhook
            url = f"{N8N_WEBHOOK}/{cve_id.strip()}"
            response = requests.get(url, timeout=30)

            if response.status_code == 200:
                raw_result = response.text.strip()

                st.subheader("üìã Resultado da An√°lise")

                # Regex para extrair blocos (ajustado ao formato do Agent)
                cve_match = re.search(r"\*CVE:\* (.+)", raw_result)
                sev_match = re.search(r"\| \*Severity:\* (.+)", raw_result)
                rel_match = re.search(r"üéØ \*Bug Bounty Relevance:\* (.+)", raw_result)
                strat_match = re.search(r"\*Strategy:\* (.+)", raw_result, re.DOTALL)

                # Fun√ß√£o helper para limpar \n\n e --
                def normalize(text: str) -> str:
                    return (
                        text.replace("\\n", "\n")   # converte \n literal em quebra real
                        .replace("--", "‚Ä¢")         # troca -- por bullet
                        .strip()
                    )

                # Exibe formatado
                if cve_match:
                    st.markdown(f"**CVE:** {normalize(cve_match.group(1))}")
                if sev_match:
                    st.markdown(f"**Severidade:** {normalize(sev_match.group(1))}")
                if rel_match:
                    st.markdown(f"**Relev√¢ncia Bug Bounty:** {normalize(rel_match.group(1))}")
                if strat_match:
                    st.markdown("**Estrat√©gia:**")
                    st.info(normalize(strat_match.group(1)))
            else:
                st.error(f"Erro {response.status_code}: {response.text}")

        except Exception as e:
            st.error(f"Erro ao conectar ao backend: {e}")
    else:
        st.warning("Por favor, insira uma CVE v√°lida.")
